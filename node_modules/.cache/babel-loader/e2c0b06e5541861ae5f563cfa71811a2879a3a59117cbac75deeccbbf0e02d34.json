{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avani\\\\OneDrive\\\\Desktop\\\\ict\\\\frontend\\\\src\\\\components\\\\AdminSignup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, Grid, TextField, Button } from \"@mui/material\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminSignup = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const validateSignup = () => {\n    if (!name.trim() || !email.trim() || !username.trim() || !password.trim()) {\n      setError(\"All fields are required.\");\n      return false;\n    }\n    // Add any additional validation logic here for admin signup\n    return true;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!validateSignup()) {\n      return;\n    }\n    axios.post(\"https://emp-fhhr.onrender.com/admin/admin/signup\", {\n      name,\n      email,\n      username,\n      password\n    }).then(result => {\n      console.log(result);\n      navigate(\"/admin/login\");\n    }).catch(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"22px\"\n      },\n      children: \"Admin Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"name\",\n              label: \"Name\",\n              fullWidth: true,\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"email\",\n              label: \"Email\",\n              fullWidth: true,\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"username\",\n              label: \"Username\",\n              fullWidth: true,\n              value: username,\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"password\",\n              label: \"Password\",\n              fullWidth: true,\n              type: \"text\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          style: {\n            margin: \"20px auto\",\n            display: \"block\",\n            backgroundColor: \"#1C1678\",\n            // Light blue color\n            color: \"#FFFFFF\" // White text color\n          },\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\",\n          textAlign: \"center\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminSignup, \"zNmfoxYfMzi+KIZXV3OTdVfNgCU=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminSignup;\nexport default AdminSignup;\nvar _c;\n$RefreshReg$(_c, \"AdminSignup\");","map":{"version":3,"names":["React","useState","Box","Grid","TextField","Button","axios","useNavigate","jsxDEV","_jsxDEV","AdminSignup","_s","name","setName","email","setEmail","username","setUsername","password","setPassword","error","setError","navigate","validateSignup","trim","handleSubmit","e","preventDefault","post","then","result","console","log","catch","err","className","children","style","textAlign","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","sx","flexGrow","onSubmit","container","spacing","item","xs","id","label","fullWidth","value","onChange","target","type","variant","margin","display","backgroundColor","color","_c","$RefreshReg$"],"sources":["C:/Users/avani/OneDrive/Desktop/ict/frontend/src/components/AdminSignup.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Box, Grid, TextField, Button } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AdminSignup = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const validateSignup = () => {\r\n    if (!name.trim() || !email.trim() || !username.trim() || !password.trim()) {\r\n      setError(\"All fields are required.\");\r\n      return false;\r\n    }\r\n    // Add any additional validation logic here for admin signup\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateSignup()) {\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(\"https://emp-fhhr.onrender.com/admin/admin/signup\", {\r\n        name,\r\n        email,\r\n        username,\r\n        password,\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n        navigate(\"/admin/login\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <h2 style={{ textAlign: \"center\", fontSize: \"22px\" }}>Admin Sign Up</h2>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            {/* Name */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                fullWidth\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </Grid>\r\n            {/* Email */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                fullWidth\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Grid>\r\n            {/* Username */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                fullWidth\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </Grid>\r\n            {/* Password */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"password\"\r\n                label=\"Password\"\r\n                fullWidth\r\n                type=\"text\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            style={{\r\n              margin: \"20px auto\",\r\n              display: \"block\",\r\n              backgroundColor: \"#1C1678\", // Light blue color\r\n              color: \"#FFFFFF\", // White text color\r\n             \r\n            }}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </form>\r\n        {error && <p style={{ color: \"red\", textAlign: \"center\" }}>{error}</p>}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminSignup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}